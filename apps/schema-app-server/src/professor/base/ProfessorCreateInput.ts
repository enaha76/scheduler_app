/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  ValidateNested,
} from "class-validator";
import { ProfessorAssignmentCreateNestedManyWithoutProfessorsInput } from "./ProfessorAssignmentCreateNestedManyWithoutProfessorsInput";
import { Type } from "class-transformer";
import { ScheduleCreateNestedManyWithoutProfessorsInput } from "./ScheduleCreateNestedManyWithoutProfessorsInput";
import { WeeklyProfessorAvailabilityCreateNestedManyWithoutProfessorsInput } from "./WeeklyProfessorAvailabilityCreateNestedManyWithoutProfessorsInput";

@InputType()
class ProfessorCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  department?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: false,
    type: () => ProfessorAssignmentCreateNestedManyWithoutProfessorsInput,
  })
  @ValidateNested()
  @Type(() => ProfessorAssignmentCreateNestedManyWithoutProfessorsInput)
  @IsOptional()
  @Field(() => ProfessorAssignmentCreateNestedManyWithoutProfessorsInput, {
    nullable: true,
  })
  professorAssignments?: ProfessorAssignmentCreateNestedManyWithoutProfessorsInput;

  @ApiProperty({
    required: false,
    type: () => ScheduleCreateNestedManyWithoutProfessorsInput,
  })
  @ValidateNested()
  @Type(() => ScheduleCreateNestedManyWithoutProfessorsInput)
  @IsOptional()
  @Field(() => ScheduleCreateNestedManyWithoutProfessorsInput, {
    nullable: true,
  })
  schedule?: ScheduleCreateNestedManyWithoutProfessorsInput;

  @ApiProperty({
    required: false,
    type: () =>
      WeeklyProfessorAvailabilityCreateNestedManyWithoutProfessorsInput,
  })
  @ValidateNested()
  @Type(() => WeeklyProfessorAvailabilityCreateNestedManyWithoutProfessorsInput)
  @IsOptional()
  @Field(
    () => WeeklyProfessorAvailabilityCreateNestedManyWithoutProfessorsInput,
    {
      nullable: true,
    }
  )
  weeklyProfessorAvailability?: WeeklyProfessorAvailabilityCreateNestedManyWithoutProfessorsInput;
}

export { ProfessorCreateInput as ProfessorCreateInput };
