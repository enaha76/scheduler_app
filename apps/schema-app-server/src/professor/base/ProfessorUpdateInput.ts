/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  ValidateNested,
} from "class-validator";
import { ProfessorAssignmentUpdateManyWithoutProfessorsInput } from "./ProfessorAssignmentUpdateManyWithoutProfessorsInput";
import { Type } from "class-transformer";
import { ScheduleUpdateManyWithoutProfessorsInput } from "./ScheduleUpdateManyWithoutProfessorsInput";
import { WeeklyProfessorAvailabilityUpdateManyWithoutProfessorsInput } from "./WeeklyProfessorAvailabilityUpdateManyWithoutProfessorsInput";

@InputType()
class ProfessorUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  department?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string;

  @ApiProperty({
    required: false,
    type: () => ProfessorAssignmentUpdateManyWithoutProfessorsInput,
  })
  @ValidateNested()
  @Type(() => ProfessorAssignmentUpdateManyWithoutProfessorsInput)
  @IsOptional()
  @Field(() => ProfessorAssignmentUpdateManyWithoutProfessorsInput, {
    nullable: true,
  })
  professorAssignments?: ProfessorAssignmentUpdateManyWithoutProfessorsInput;

  @ApiProperty({
    required: false,
    type: () => ScheduleUpdateManyWithoutProfessorsInput,
  })
  @ValidateNested()
  @Type(() => ScheduleUpdateManyWithoutProfessorsInput)
  @IsOptional()
  @Field(() => ScheduleUpdateManyWithoutProfessorsInput, {
    nullable: true,
  })
  schedule?: ScheduleUpdateManyWithoutProfessorsInput;

  @ApiProperty({
    required: false,
    type: () => WeeklyProfessorAvailabilityUpdateManyWithoutProfessorsInput,
  })
  @ValidateNested()
  @Type(() => WeeklyProfessorAvailabilityUpdateManyWithoutProfessorsInput)
  @IsOptional()
  @Field(() => WeeklyProfessorAvailabilityUpdateManyWithoutProfessorsInput, {
    nullable: true,
  })
  weeklyProfessorAvailability?: WeeklyProfessorAvailabilityUpdateManyWithoutProfessorsInput;
}

export { ProfessorUpdateInput as ProfessorUpdateInput };
