/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsInt,
  Max,
  IsDate,
  ValidateNested,
  IsOptional,
} from "class-validator";
import { Type } from "class-transformer";
import { ExceptionalClosureCreateNestedManyWithoutTimeSlotsInput } from "./ExceptionalClosureCreateNestedManyWithoutTimeSlotsInput";
import { ScheduleCreateNestedManyWithoutTimeSlotsInput } from "./ScheduleCreateNestedManyWithoutTimeSlotsInput";
import { WeeklyProfessorAvailabilityCreateNestedManyWithoutTimeSlotsInput } from "./WeeklyProfessorAvailabilityCreateNestedManyWithoutTimeSlotsInput";

@InputType()
class TimeSlotCreateInput {
  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Max(99999999999)
  @Field(() => Number)
  dayOfWeek!: number;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  endTime!: Date;

  @ApiProperty({
    required: false,
    type: () => ExceptionalClosureCreateNestedManyWithoutTimeSlotsInput,
  })
  @ValidateNested()
  @Type(() => ExceptionalClosureCreateNestedManyWithoutTimeSlotsInput)
  @IsOptional()
  @Field(() => ExceptionalClosureCreateNestedManyWithoutTimeSlotsInput, {
    nullable: true,
  })
  exceptionalClosures?: ExceptionalClosureCreateNestedManyWithoutTimeSlotsInput;

  @ApiProperty({
    required: false,
    type: () => ScheduleCreateNestedManyWithoutTimeSlotsInput,
  })
  @ValidateNested()
  @Type(() => ScheduleCreateNestedManyWithoutTimeSlotsInput)
  @IsOptional()
  @Field(() => ScheduleCreateNestedManyWithoutTimeSlotsInput, {
    nullable: true,
  })
  schedule?: ScheduleCreateNestedManyWithoutTimeSlotsInput;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Max(99999999999)
  @Field(() => Number)
  slotIndex!: number;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  startTime!: Date;

  @ApiProperty({
    required: false,
    type: () =>
      WeeklyProfessorAvailabilityCreateNestedManyWithoutTimeSlotsInput,
  })
  @ValidateNested()
  @Type(() => WeeklyProfessorAvailabilityCreateNestedManyWithoutTimeSlotsInput)
  @IsOptional()
  @Field(
    () => WeeklyProfessorAvailabilityCreateNestedManyWithoutTimeSlotsInput,
    {
      nullable: true,
    }
  )
  weeklyProfessorAvailability?: WeeklyProfessorAvailabilityCreateNestedManyWithoutTimeSlotsInput;
}

export { TimeSlotCreateInput as TimeSlotCreateInput };
