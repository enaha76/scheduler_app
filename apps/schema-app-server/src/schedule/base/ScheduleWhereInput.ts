/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CourseWhereUniqueInput } from "../../course/base/CourseWhereUniqueInput";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { DateTimeFilter } from "../../util/DateTimeFilter";
import { GroupWhereUniqueInput } from "../../group/base/GroupWhereUniqueInput";
import { IntFilter } from "../../util/IntFilter";
import { ProfessorWhereUniqueInput } from "../../professor/base/ProfessorWhereUniqueInput";
import { RoomWhereUniqueInput } from "../../room/base/RoomWhereUniqueInput";
import { StringFilter } from "../../util/StringFilter";
import { TimeSlotWhereUniqueInput } from "../../timeSlot/base/TimeSlotWhereUniqueInput";
import { AcademicWeekWhereUniqueInput } from "../../academicWeek/base/AcademicWeekWhereUniqueInput";

@InputType()
class ScheduleWhereInput {
  @ApiProperty({
    required: false,
    type: () => CourseWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CourseWhereUniqueInput)
  @IsOptional()
  @Field(() => CourseWhereUniqueInput, {
    nullable: true,
  })
  course?: CourseWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  createdAt?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: () => GroupWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => GroupWhereUniqueInput)
  @IsOptional()
  @Field(() => GroupWhereUniqueInput, {
    nullable: true,
  })
  group?: GroupWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: IntFilter,
  })
  @Type(() => IntFilter)
  @IsOptional()
  @Field(() => IntFilter, {
    nullable: true,
  })
  id?: IntFilter;

  @ApiProperty({
    required: false,
    type: () => ProfessorWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ProfessorWhereUniqueInput)
  @IsOptional()
  @Field(() => ProfessorWhereUniqueInput, {
    nullable: true,
  })
  professor?: ProfessorWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => RoomWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => RoomWhereUniqueInput)
  @IsOptional()
  @Field(() => RoomWhereUniqueInput, {
    nullable: true,
  })
  room?: RoomWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  teachingType?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => TimeSlotWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TimeSlotWhereUniqueInput)
  @IsOptional()
  @Field(() => TimeSlotWhereUniqueInput, {
    nullable: true,
  })
  timeSlot?: TimeSlotWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => AcademicWeekWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => AcademicWeekWhereUniqueInput)
  @IsOptional()
  @Field(() => AcademicWeekWhereUniqueInput, {
    nullable: true,
  })
  week?: AcademicWeekWhereUniqueInput;
}

export { ScheduleWhereInput as ScheduleWhereInput };
