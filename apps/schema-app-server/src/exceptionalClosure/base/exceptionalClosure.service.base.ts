/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  ExceptionalClosure as PrismaExceptionalClosure,
  TimeSlot as PrismaTimeSlot,
  AcademicWeek as PrismaAcademicWeek,
} from "@prisma/client";

export class ExceptionalClosureServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ExceptionalClosureCountArgs, "select">
  ): Promise<number> {
    return this.prisma.exceptionalClosure.count(args);
  }

  async exceptionalClosures(
    args: Prisma.ExceptionalClosureFindManyArgs
  ): Promise<PrismaExceptionalClosure[]> {
    return this.prisma.exceptionalClosure.findMany(args);
  }
  async exceptionalClosure(
    args: Prisma.ExceptionalClosureFindUniqueArgs
  ): Promise<PrismaExceptionalClosure | null> {
    return this.prisma.exceptionalClosure.findUnique(args);
  }
  async createExceptionalClosure(
    args: Prisma.ExceptionalClosureCreateArgs
  ): Promise<PrismaExceptionalClosure> {
    return this.prisma.exceptionalClosure.create(args);
  }
  async updateExceptionalClosure(
    args: Prisma.ExceptionalClosureUpdateArgs
  ): Promise<PrismaExceptionalClosure> {
    return this.prisma.exceptionalClosure.update(args);
  }
  async deleteExceptionalClosure(
    args: Prisma.ExceptionalClosureDeleteArgs
  ): Promise<PrismaExceptionalClosure> {
    return this.prisma.exceptionalClosure.delete(args);
  }

  async getTimeSlot(parentId: number): Promise<PrismaTimeSlot | null> {
    return this.prisma.exceptionalClosure
      .findUnique({
        where: { id: parentId },
      })
      .timeSlot();
  }

  async getWeek(parentId: number): Promise<PrismaAcademicWeek | null> {
    return this.prisma.exceptionalClosure
      .findUnique({
        where: { id: parentId },
      })
      .week();
  }
}
