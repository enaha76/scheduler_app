/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { GroupOverlapCreateNestedManyWithoutGroupsInput } from "./GroupOverlapCreateNestedManyWithoutGroupsInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  MaxLength,
  IsInt,
  Max,
} from "class-validator";
import { Type } from "class-transformer";
import { ProfessorAssignmentCreateNestedManyWithoutGroupsInput } from "./ProfessorAssignmentCreateNestedManyWithoutGroupsInput";
import { ScheduleCreateNestedManyWithoutGroupsInput } from "./ScheduleCreateNestedManyWithoutGroupsInput";
import { WeeklyTeachingLoadCreateNestedManyWithoutGroupsInput } from "./WeeklyTeachingLoadCreateNestedManyWithoutGroupsInput";

@InputType()
class GroupCreateInput {
  @ApiProperty({
    required: false,
    type: () => GroupOverlapCreateNestedManyWithoutGroupsInput,
  })
  @ValidateNested()
  @Type(() => GroupOverlapCreateNestedManyWithoutGroupsInput)
  @IsOptional()
  @Field(() => GroupOverlapCreateNestedManyWithoutGroupsInput, {
    nullable: true,
  })
  groupOverlaps1?: GroupOverlapCreateNestedManyWithoutGroupsInput;

  @ApiProperty({
    required: false,
    type: () => GroupOverlapCreateNestedManyWithoutGroupsInput,
  })
  @ValidateNested()
  @Type(() => GroupOverlapCreateNestedManyWithoutGroupsInput)
  @IsOptional()
  @Field(() => GroupOverlapCreateNestedManyWithoutGroupsInput, {
    nullable: true,
  })
  groupOverlaps2?: GroupOverlapCreateNestedManyWithoutGroupsInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: false,
    type: () => ProfessorAssignmentCreateNestedManyWithoutGroupsInput,
  })
  @ValidateNested()
  @Type(() => ProfessorAssignmentCreateNestedManyWithoutGroupsInput)
  @IsOptional()
  @Field(() => ProfessorAssignmentCreateNestedManyWithoutGroupsInput, {
    nullable: true,
  })
  professorAssignments?: ProfessorAssignmentCreateNestedManyWithoutGroupsInput;

  @ApiProperty({
    required: false,
    type: () => ScheduleCreateNestedManyWithoutGroupsInput,
  })
  @ValidateNested()
  @Type(() => ScheduleCreateNestedManyWithoutGroupsInput)
  @IsOptional()
  @Field(() => ScheduleCreateNestedManyWithoutGroupsInput, {
    nullable: true,
  })
  schedule?: ScheduleCreateNestedManyWithoutGroupsInput;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Max(99999999999)
  @Field(() => Number)
  semester!: number;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @Field(() => String)
  specialization!: string;

  @ApiProperty({
    required: false,
    type: () => WeeklyTeachingLoadCreateNestedManyWithoutGroupsInput,
  })
  @ValidateNested()
  @Type(() => WeeklyTeachingLoadCreateNestedManyWithoutGroupsInput)
  @IsOptional()
  @Field(() => WeeklyTeachingLoadCreateNestedManyWithoutGroupsInput, {
    nullable: true,
  })
  weeklyTeachingLoads?: WeeklyTeachingLoadCreateNestedManyWithoutGroupsInput;
}

export { GroupCreateInput as GroupCreateInput };
